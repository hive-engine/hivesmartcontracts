const UTILITY_TOKEN_SYMBOL="BEE",UTILITY_TOKEN_PRECISION=8,BEED_PRECISION=4;actions.updateParams=async payload=>{if(api.sender!==api.owner)return;const{minConvertibleAmount:minConvertibleAmount,feePercentage:feePercentage}=payload,params=await api.db.findOne("params",{});minConvertibleAmount&&"string"==typeof minConvertibleAmount&&!api.BigNumber(minConvertibleAmount).isNaN()&&api.BigNumber(minConvertibleAmount).gte(0)&&(params.minConvertibleAmount=minConvertibleAmount),feePercentage&&"string"==typeof feePercentage&&!api.BigNumber(feePercentage).isNaN()&&api.BigNumber(feePercentage).gte(0)&&(params.feePercentage=feePercentage),await api.db.update("params",params)};const countDecimals=value=>api.BigNumber(value).dp(),isTokenTransferVerified=(result,from,to,symbol,quantity,eventStr)=>!(void 0!==result.errors||!result.events||void 0===result.events.find(el=>"tokens"===el.contract&&el.event===eventStr&&el.data.from===from&&el.data.to===to&&api.BigNumber(el.data.quantity).eq(quantity)&&el.data.symbol===symbol)),verifyUtilityTokenBalance=async(amount,account)=>{if(api.BigNumber(amount).lte(0))return!0;const utilityTokenBalance=await api.db.findOneInTable("tokens","balances",{account:account,symbol:"BEE"});return!(!utilityTokenBalance||!api.BigNumber(utilityTokenBalance.balance).gte(amount))},burnUtilityTokens=async(amount,isSignedWithActiveKey)=>{if(api.BigNumber(amount).gt(0)){const res=await api.executeSmartContract("tokens","transfer",{to:"null",symbol:"BEE",quantity:amount,isSignedWithActiveKey:isSignedWithActiveKey});if(!isTokenTransferVerified(res,api.sender,"null","BEE",amount,"transfer"))return!1}return!0};actions.createSSC=async()=>{if(!1===await api.db.tableExists("params")){await api.db.createTable("params");const params={minConvertibleAmount:"1",feePercentage:"0.01"};await api.db.insert("params",params)}if(!await api.db.findOneInTable("tokens","tokens",{symbol:"BEED"})){const tokenProps={name:"BeeD",symbol:"BEED",url:"https://tribaldex.com",precision:4,maxSupply:`${Number.MAX_SAFE_INTEGER}`},updateData={symbol:"BEED",metadata:{url:"https://tribaldex.com",icon:"https://cdn.tribaldex.com/tribaldex/token-icons/BEE.png",desc:"BEED is the native stablecoin for the Hive Engine platform. You can mint new BEED by burning BEE."}};await api.executeSmartContract("tokens","create",tokenProps),await api.executeSmartContract("tokens","updateMetadata",updateData)}},actions.convert=async payload=>{const{quantity:quantity,isSignedWithActiveKey:isSignedWithActiveKey}=payload;if(api.assert(!0===isSignedWithActiveKey,"you must use a custom_json signed with your active key")&&api.assert(quantity&&"string"==typeof quantity&&!api.BigNumber(quantity).isNaN(),"invalid params")){const params=await api.db.findOne("params",{}),qtyAsBigNum=api.BigNumber(quantity);if(api.assert(qtyAsBigNum.gte(params.minConvertibleAmount),`amount to convert must be >= ${params.minConvertibleAmount}`)&&api.assert(countDecimals(quantity)<=8,"symbol precision mismatch")){const hasEnoughBalance=await verifyUtilityTokenBalance(quantity,api.sender);if(!api.assert(hasEnoughBalance,"not enough balance"))return!1;const feePercentage=api.BigNumber(params.feePercentage);let fee="0",finalQty=qtyAsBigNum;feePercentage.gt(0)&&(fee=qtyAsBigNum.multipliedBy(feePercentage).toFixed(8,api.BigNumber.ROUND_UP),api.BigNumber(fee).lt("0.00000001")&&(fee="0.00000001"),finalQty=qtyAsBigNum.minus(fee));const beePool=await api.db.findOneInTable("marketpools","pools",{tokenPair:"SWAP.HIVE:BEE"}),hbdPool=await api.db.findOneInTable("marketpools","pools",{tokenPair:"SWAP.HIVE:SWAP.HBD"}),beePriceInHive=beePool&&beePool.quotePrice?beePool.quotePrice:"0",hivePriceInHBD=hbdPool&&hbdPool.basePrice?hbdPool.basePrice:"0",beePriceInDollars=api.BigNumber(beePriceInHive).multipliedBy(hivePriceInHBD).toFixed(8,api.BigNumber.ROUND_DOWN),beedToIssue=finalQty.multipliedBy(beePriceInDollars).toFixed(4,api.BigNumber.ROUND_DOWN);return!!api.assert(api.BigNumber(beedToIssue).gte("0.0001"),`resulting token issuance is too small; BEE price is ${beePriceInDollars}`)&&(!!await burnUtilityTokens(quantity,isSignedWithActiveKey)&&(await api.executeSmartContract("tokens","issue",{to:api.sender,symbol:"BEED",quantity:beedToIssue}),api.emit("beeConversion",{to:api.sender,fee:fee,bee:finalQty.toFixed(8),beed:beedToIssue,beePriceInUSD:beePriceInDollars}),!0))}}return!1};